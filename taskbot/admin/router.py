import asyncio
from datetime import datetime, timedelta
from loguru import logger
from typing import List
from aiogram import Router, F
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import CallbackQuery, Message, ChatJoinRequest
from sqlalchemy.ext.asyncio import AsyncSession
from taskbot.admin.kbs import main_admin_kb
from taskbot.dao.models import User
from taskbot.dao.dao import UserDAO, RoleDAO, ReferDAO
from taskbot.dao.schemas import UserDtoBase, RoleDto, ReferDtoBase
from taskbot.admin.schemas import UserTelegramId, UserRoleId, ReferLinkFilterByChatAndUserIds
from taskbot.admin.filters import IsAdmin


admin_router = Router()
admin_router.message.filter(IsAdmin)


@admin_router.message(Command('admin_panel'))
async def admin_panel(message: Message, session_without_commit: AsyncSession):
    logger.info(f"chat#{message.chat.id}|user#{message.from_user.id}: –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã admin/admin_panel")

    user_id = message.from_user.id
    user = await UserDAO.find_one_or_none(session_without_commit, UserTelegramId(telegram_id=user_id))
    
    if (user.role_id == 1):
        return await message.answer(
            text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_admin_kb()
        )
    
    await message.answer(
        text=f"–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!",
        reply_markup=None
    )


@admin_router.callback_query(F.data == "admin_panel")
async def admin_panel(call: CallbackQuery, session_without_commit: AsyncSession):
    logger.info(f"chat#{call.message.chat.id}|user#{call.message.from_user.id}: –í—ã–∑–æ–≤ –∫–Ω–æ–ø–∫–∏ admin/admin_panel")
    
    user_id = call.from_user.id
    user = await UserDAO.find_one_or_none(session_without_commit, UserTelegramId(telegram_id=user_id))

    if (user.role_id == 1):
        await call.answer("–î–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–µ—à–µ–Ω!")
        return await call.message.edit_text(
            text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_admin_kb()
        )

    await call.message.edit_text(
        text=f"–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!",
        reply_markup=None
    )

#deprecated
{
# @admin_router.message(Command('refer_link'))
# async def refer_link(message: Message, session_with_commit: AsyncSession):
#     logger.info(f"chat#{message.chat.id}|user#{message.from_user.id}: Command - admin/refer_link")

#     if (message.chat.type == 'private'):
#         return await message.answer(
#             "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö —á–∞—Ç–æ–≤. –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π —á–∞—Ç –æ—Ç–∫—Ä—ã—Ç—ã–º, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π. –ï—Å–ª–∏ –≤—ã –æ–±—â–∞–µ—Ç–µ—Å—å —Å –±–æ—Ç–æ–º –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ - —Å–æ–∑–¥–∞–π—Ç–µ –≥—Ä—É–ø–ø–æ–≤–æ–π –æ—Ç–∫—Ä—ã—Ç—ã–π —á–∞—Ç –∏ –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
#         )
    
#     chat_id = message.chat.id
#     expire_date = datetime.now() + timedelta(days=1)
#     try:
#         invite_link_obj = await message.bot.create_chat_invite_link(
#             chat_id=chat_id,
#             expire_date=expire_date.timestamp(),
#             member_limit=1
#         )

#         invite_link = invite_link_obj.invite_link
        
#         referDto = ReferDtoBase(
#             chat_id=message.chat.id,
#             user_id=message.from_user.id,
#             link=invite_link
#         )
#         await ReferDAO.add(session_with_commit, referDto)
#     except Exception as e:        
#         return message.answer(
#             text=e.message
#         )
    
#     text = (f"–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:\n"
#             f"üîó <code>{invite_link}</code> (–Ω–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å)\n"
#             f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞\n"
#             f"‚ùó (–†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ –¥–ª—è 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
#     )

#     await message.answer(
#         text=text,
#         reply_markup=None
#     )
}


#deprecated
{  
# @admin_router.message(Command('cancel_all_refer_links'))
# async def cancel_all_refer_links(message: Message, session_with_commit: AsyncSession):
#     logger.info(f"chat#{message.chat.id}|user#{message.from_user.id}: Command - admin/cancel_all_refer_links")
#     chat_id = message.chat.id
#     user_id = message.chat.id

#     refers = await ReferDAO.find_all(
#         session_with_commit,
#         ReferLinkFilterByChatAndUserIds(
#             chat_id=chat_id,
#             user_id=user_id
#         )
#     )
#     for refer in refers:
#         #TODO: did not work
#         await message.bot.revoke_chat_invite_link(chat_id, refer.link)
    
#     await message.answer(
#         text="–í—Å–µ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã."
#     )
}


#TODO:
# #
# Message routes
# #
@admin_router.callback_query(F.data == "send_messages")
async def send_messages(call: CallbackQuery):
    logger.info(f"chat#{call.message.chat.id}|user#{call.message.from_user.id}: –í—ã–∑–æ–≤ –∫–Ω–æ–ø–∫–∏ admin/messages")
    await call.message.edit_text(
        text=f"–ü–æ—Å–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É:",
        reply_markup=None
    )

